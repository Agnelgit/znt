/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ZynqtraEvents,
  ZynqtraEventsInterface,
} from "../../contracts/ZynqtraEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "participant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
    ],
    name: "AttendanceMarked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "participant",
        type: "address",
      },
    ],
    name: "EventRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "createEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "eventExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "eventParticipants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "getEventParticipants",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_participant",
        type: "address",
      },
    ],
    name: "getRegistration",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "participant",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "attended",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "pointsEarned",
            type: "uint256",
          },
        ],
        internalType: "struct ZynqtraEvents.EventRegistration",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserEvents",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_participant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_points",
        type: "uint256",
      },
    ],
    name: "markAttendance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_eventId",
        type: "uint256",
      },
    ],
    name: "registerForEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registrations",
    outputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "participant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "attended",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "pointsEarned",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userEvents",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61179e8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063b1ed1e6c11610066578063b1ed1e6c14610210578063b50e018214610244578063bdfc989314610274578063f2fde38b146102a4576100cf565b80638da5cb5b146101a6578063977d996d146101c4578063a3c28dfc146101e0576100cf565b8063171e5ba2146100d4578063406db84314610104578063578277771461012057806364dc6de01461013c5780636fea5b941461016c578063715018a61461019c575b600080fd5b6100ee60048036038101906100e99190610f6b565b6102c0565b6040516100fb9190611060565b60405180910390f35b61011e600480360381019061011991906110ae565b610357565b005b61013a600480360381019061013591906110db565b6106d3565b005b6101566004803603810190610151919061112e565b610975565b6040516101639190611200565b60405180910390f35b6101866004803603810190610181919061121b565b610a6f565b604051610193919061126a565b60405180910390f35b6101a4610abd565b005b6101ae610ad1565b6040516101bb919061126a565b60405180910390f35b6101de60048036038101906101d991906110ae565b610afa565b005b6101fa60048036038101906101f591906110ae565b610b92565b6040516102079190611294565b60405180910390f35b61022a6004803603810190610225919061112e565b610bb2565b60405161023b9594939291906112be565b60405180910390f35b61025e600480360381019061025991906110ae565b610c22565b60405161026b91906113c0565b60405180910390f35b61028e600480360381019061028991906113e2565b610cc3565b60405161029b9190611422565b60405180910390f35b6102be60048036038101906102b99190610f6b565b610cf4565b005b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561034b57602002820191906000526020600020905b815481526020019060010190808311610337575b50505050509050919050565b6004600082815260200190815260200160002060009054906101000a900460ff166103b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ae9061149a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610499576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049090611506565b60405180910390fd5b6040518060a001604052808281526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200160001515815260200160008152506001600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055506080820151816004015590505060026000828152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16817f2f6a2e59731a2d3f31a79da136922c821491a83d5f7edec319c45855cf9585a260405160405180910390a350565b6106db610d77565b600073ffffffffffffffffffffffffffffffffffffffff166001600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036107bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b490611572565b60405180910390fd5b6001600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff161561085e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610855906115de565b60405180910390fd5b600180600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff021916908315150217905550806001600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055508173ffffffffffffffffffffffffffffffffffffffff16837f58db8ff11b1f2ad89b5a611a7f0c48c73c8579db530ad0fd39df6523bc867261836040516109689190611422565b60405180910390a3505050565b61097d610ec1565b6001600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff16151515158152602001600482015481525050905092915050565b60026020528160005260406000208181548110610a8b57600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ac5610d77565b610acf6000610df5565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b02610d77565b6004600082815260200190815260200160002060009054906101000a900460ff1615610b63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5a9061164a565b60405180910390fd5b60016004600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60046020528060005260406000206000915054906101000a900460ff1681565b6001602052816000526040600020602052806000526040600020600091509150508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16908060040154905085565b606060026000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610cb757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c6d575b50505050509050919050565b60036020528160005260406000208181548110610cdf57600080fd5b90600052602060002001600091509150505481565b610cfc610d77565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d62906116dc565b60405180910390fd5b610d7481610df5565b50565b610d7f610eb9565b73ffffffffffffffffffffffffffffffffffffffff16610d9d610ad1565b73ffffffffffffffffffffffffffffffffffffffff1614610df3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dea90611748565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600015158152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3882610f0d565b9050919050565b610f4881610f2d565b8114610f5357600080fd5b50565b600081359050610f6581610f3f565b92915050565b600060208284031215610f8157610f80610f08565b5b6000610f8f84828501610f56565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b610fd781610fc4565b82525050565b6000610fe98383610fce565b60208301905092915050565b6000602082019050919050565b600061100d82610f98565b6110178185610fa3565b935061102283610fb4565b8060005b8381101561105357815161103a8882610fdd565b975061104583610ff5565b925050600181019050611026565b5085935050505092915050565b6000602082019050818103600083015261107a8184611002565b905092915050565b61108b81610fc4565b811461109657600080fd5b50565b6000813590506110a881611082565b92915050565b6000602082840312156110c4576110c3610f08565b5b60006110d284828501611099565b91505092915050565b6000806000606084860312156110f4576110f3610f08565b5b600061110286828701611099565b935050602061111386828701610f56565b925050604061112486828701611099565b9150509250925092565b6000806040838503121561114557611144610f08565b5b600061115385828601611099565b925050602061116485828601610f56565b9150509250929050565b61117781610f2d565b82525050565b60008115159050919050565b6111928161117d565b82525050565b60a0820160008201516111ae6000850182610fce565b5060208201516111c1602085018261116e565b5060408201516111d46040850182610fce565b5060608201516111e76060850182611189565b5060808201516111fa6080850182610fce565b50505050565b600060a0820190506112156000830184611198565b92915050565b6000806040838503121561123257611231610f08565b5b600061124085828601611099565b925050602061125185828601611099565b9150509250929050565b61126481610f2d565b82525050565b600060208201905061127f600083018461125b565b92915050565b61128e8161117d565b82525050565b60006020820190506112a96000830184611285565b92915050565b6112b881610fc4565b82525050565b600060a0820190506112d360008301886112af565b6112e0602083018761125b565b6112ed60408301866112af565b6112fa6060830185611285565b61130760808301846112af565b9695505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611349838361116e565b60208301905092915050565b6000602082019050919050565b600061136d82611311565b611377818561131c565b93506113828361132d565b8060005b838110156113b357815161139a888261133d565b97506113a583611355565b925050600181019050611386565b5085935050505092915050565b600060208201905081810360008301526113da8184611362565b905092915050565b600080604083850312156113f9576113f8610f08565b5b600061140785828601610f56565b925050602061141885828601611099565b9150509250929050565b600060208201905061143760008301846112af565b92915050565b600082825260208201905092915050565b7f4576656e7420646f6573206e6f74206578697374000000000000000000000000600082015250565b600061148460148361143d565b915061148f8261144e565b602082019050919050565b600060208201905081810360008301526114b381611477565b9050919050565b7f416c726561647920726567697374657265640000000000000000000000000000600082015250565b60006114f060128361143d565b91506114fb826114ba565b602082019050919050565b6000602082019050818103600083015261151f816114e3565b9050919050565b7f4e6f742072656769737465726564000000000000000000000000000000000000600082015250565b600061155c600e8361143d565b915061156782611526565b602082019050919050565b6000602082019050818103600083015261158b8161154f565b9050919050565b7f416c7265616479206d61726b656420617474656e646564000000000000000000600082015250565b60006115c860178361143d565b91506115d382611592565b602082019050919050565b600060208201905081810360008301526115f7816115bb565b9050919050565b7f4576656e7420616c726561647920657869737473000000000000000000000000600082015250565b600061163460148361143d565b915061163f826115fe565b602082019050919050565b6000602082019050818103600083015261166381611627565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006116c660268361143d565b91506116d18261166a565b604082019050919050565b600060208201905081810360008301526116f5816116b9565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061173260208361143d565b915061173d826116fc565b602082019050919050565b6000602082019050818103600083015261176181611725565b905091905056fea264697066735822122067c3abceb6379ec4d274b5e5092ee077e8c8e599f3af997e9cb42b52d08c828f64736f6c63430008130033";

type ZynqtraEventsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZynqtraEventsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZynqtraEvents__factory extends ContractFactory {
  constructor(...args: ZynqtraEventsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ZynqtraEvents & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ZynqtraEvents__factory {
    return super.connect(runner) as ZynqtraEvents__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZynqtraEventsInterface {
    return new Interface(_abi) as ZynqtraEventsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ZynqtraEvents {
    return new Contract(address, _abi, runner) as unknown as ZynqtraEvents;
  }
}
